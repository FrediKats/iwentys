@page "/subject/assignment-management/{SubjectId:int}/submits"
@using System.Security.Cryptography.X509Certificates

@namespace Iwentys.Endpoints.WebClient.Modules.SubjectAssignments.MentorPages
@attribute [Authorize]

<MudContainer>
    <MudGrid>
        <MudItem xs="12" sm="12" md="12">
            <MudText Align="Align.Center" Typo="Typo.h4">Assignment submits</MudText>
            <MudText Align="Align.Left" Typo="Typo.body2">Click on row will navigate to submit page</MudText>
        </MudItem>

        @if (_subjectAssignmentSubmits is not null)
        {
            <MudItem xs="12" sm="12" md="12">
                <MudTable T="SubjectAssignmentSubmitDto"
                          Items="@_subjectAssignmentSubmits"
                          OnRowClick="@(arg => OnRowClicked(arg))"
                          class="dark-elevation-01"
                          Filter="new Func<SubjectAssignmentSubmitDto,bool>(FilterFunc)">
                    <ToolBarContent>
                        <MudTextField @bind-Value="searchString" Placeholder=" Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                    </ToolBarContent>
                    <HeaderContent>
                        <MudTh><MudTableSortLabel SortBy="new Func<SubjectAssignmentSubmitDto, object>(x => x.SubjectAssignmentTitle)">Assignment</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<SubjectAssignmentSubmitDto, object>(x => x.Student.SecondName)">Student</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<SubjectAssignmentSubmitDto, object>(x => x.SubmitTimeUtc)">Submit time</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<SubjectAssignmentSubmitDto, object>(x => x.State)">State</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<SubjectAssignmentSubmitDto, object>(x => x.ApproveTimeUtc)">Approve time</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<SubjectAssignmentSubmitDto, object>(x => x.RejectTimeUtc)">Reject time</MudTableSortLabel></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd Class=" clickable">
                            @context.SubjectAssignmentTitle
                        </MudTd>
                        <MudTd Class="clickable">@context.Student.GetFullName()</MudTd>
                        <MudTd Class="clickable">@context.SubmitTimeUtc</MudTd>
                        <MudTd Class="clickable">@context.State</MudTd>
                        <MudTd Class="clickable">@context.ApproveTimeUtc</MudTd>
                        <MudTd Class="clickable">@context.RejectTimeUtc</MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager RowsPerPageString="Students per page"/>
                    </PagerContent>
                </MudTable>
            </MudItem>
        }

    </MudGrid>
</MudContainer>

@code {
    [Parameter]
    public int SubjectId { get; set; }

    private string searchString = "";

    private bool FilterFunc(SubjectAssignmentSubmitDto student)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (student.SubjectAssignmentTitle.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (student.Student.SecondName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (student.Student.FirstName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{student.SubmitTimeUtc} {student.RejectTimeUtc} {student.ApproveTimeUtc}".Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    private void OnRowClicked(TableRowClickEventArgs<SubjectAssignmentSubmitDto> obj)
    {
        _navigationManager.NavigateTo($"/subject/{SubjectId}/management/assignments/submits/{obj.Item.Id}");
    }
}