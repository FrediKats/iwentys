<div class="card-list-element">
    <MudCard Class="dark-elevation-01">
        <MudCardContent>
            <div class="card-list-element-content">
                <MudText Typo="Typo.h6">
                    Submit for [@Submit.SubjectAssignmentTitle]
                </MudText>
                <MudText Typo="Typo.body2">
                    Submitted: @Submit.SubmitTimeUtc
                </MudText>
                @switch (Submit.State)
                {
                    case SubmitState.Created:
                        <MudPaper Class="p-4">
                            <MudText Color="Color.Warning" Typo="Typo.h6">
                                Not checked
                            </MudText>
                        </MudPaper>
                        break;
                    case SubmitState.Approved:
                        <MudPaper Class="p-4">
                            <MudText Color="Color.Success" Typo="Typo.h6">
                                Approved (@Submit.ApproveTimeUtc)
                            </MudText>

                        </MudPaper>
                        break;
                    case SubmitState.Rejected:
                        <MudPaper Class="p-4">
                            <MudText Color="Color.Error" Typo="Typo.h6">
                                Rejected (@Submit.RejectTimeUtc)
                            </MudText>
                        </MudPaper>
                        break;
                    default:
                        throw new ArgumentOutOfRangeException(nameof(SubmitState), "Unsupported assignment state");
                }
            </div>
        </MudCardContent>
    </MudCard>
</div>

@code {
    [Parameter]
    public SubjectAssignmentSubmitDto Submit { get; set; }
}
