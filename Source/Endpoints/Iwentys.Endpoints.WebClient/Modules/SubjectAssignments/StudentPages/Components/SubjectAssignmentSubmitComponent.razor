<div class="card-list-element">
    <MudCard Class="dark-elevation-01">
        <MudCardContent>
            <div class="card-list-element-content">
                <MudText Typo="Typo.h6">
                    Submit for [@Submit.SubjectAssignmentTitle]
                </MudText>
                <MudText Typo="Typo.body2">
                    Submitted: [@Submit.SubmitTimeUtc]
                </MudText>
                <MudPaper Class="p-4 h6" Style="@($"color:{Colors.Green.Accent3};")">
                    Not checked
                </MudPaper>
                @switch (Submit.State)
                {
                    case SubmitState.Created:
                        <MudPaper Class="p-4 h6" Style="@($"color:{Colors.Yellow.Lighten1};")">
                            Not checked
                        </MudPaper>
                        break;
                    case SubmitState.Approved:
                        <MudPaper Class="p-4 h6" Style="@($"color:{Colors.Green.Accent3};")">
                            Approved (@Submit.ApproveTimeUtc)
                        </MudPaper>
                        break;
                    case SubmitState.Rejected:
                        <MudPaper Class="p-4 h6" Style="@($"color:{Colors.DeepOrange.Darken4};")">
                            Rejected (@Submit.RejectTimeUtc)
                        </MudPaper>
                        break;
                    default:
                        throw new ArgumentOutOfRangeException(nameof(SubmitState), "Unsupported assignment state");
                }
            </div>
        </MudCardContent>
    </MudCard>
</div>

@code {
    [Parameter]
    public SubjectAssignmentSubmitDto Submit { get; set; }
}
