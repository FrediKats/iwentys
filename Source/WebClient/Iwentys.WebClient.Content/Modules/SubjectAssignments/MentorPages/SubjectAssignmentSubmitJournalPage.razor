@page "/subject/assignment-management/{SubjectId:int}/submits"

@namespace Iwentys.WebClient.Content
@attribute [Authorize]

<MudContainer>
    <MudGrid>
        <MudItem xs="12" sm="12" md="12">
            <MudText Align="Align.Center" Typo="Typo.h4">Assignment submits</MudText>
            <MudText Align="Align.Left" Typo="Typo.body2">Click on row will navigate to submit page</MudText>
        </MudItem>

        @if (_subjectAssignmentSubmits is not null)
        {
            <MudItem xs="12" sm="12" md="12">
                <MudTable @ref="_table" T="SubjectAssignmentSubmitDto"
                          Items="@_tableSubjectAssignmentSubmits"
                          OnRowClick="@(arg => OnRowClicked(arg))"
                          class="dark-elevation-01"
                          Filter="new Func<SubjectAssignmentSubmitDto, bool>(IsMatchedWithSearchRequest)">
                    <ToolBarContent>
                        <MudTextField @bind-Value="_searchString" Placeholder="Search"  Variant="Variant.Outlined" 
                                      Margin="Margin.None" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                                      IconSize="Size.Medium" Class="mt-3">
                        </MudTextField>
                    </ToolBarContent>
                    <HeaderContent>
                        <MudTh><MudTableSortLabel SortBy="new Func<SubjectAssignmentSubmitDto, object>(x => x.SubjectAssignmentTitle)">Assignment</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<SubjectAssignmentSubmitDto, object>(x => x.Student.SecondName)">Student</MudTableSortLabel></MudTh>
                        <MudTh>
                            <div class="d-flex">
                                <MudDateRangePicker PickerVariant="PickerVariant.Dialog" @ref="_submitDatePicker" DisableToolbar="true" Adornment="Adornment.None" Class="range-picker-dialog-button">
                                    <PickerActions>
                                        <MudButton Class="mr-auto align-self-start" OnClick="@(() => _submitDatePicker.Clear())">Clear</MudButton>
                                        <MudButton Color="Color.Primary" OnClick="@(() => _submitDatePicker.Close())">Ok</MudButton>
                                    </PickerActions>
                                </MudDateRangePicker>
                                <MudTableSortLabel SortBy="new Func<SubjectAssignmentSubmitDto, object>(x => x.SubmitTimeUtc)">Submit time</MudTableSortLabel>
                                <MudIconButton Icon="@Icons.Outlined.FilterAlt" @onclick="@(() => _submitDatePicker.Open())"/>
                            </div>
                        </MudTh>
                        <MudTh>
                            <div class="d-flex">
                                <MudTableSortLabel  SortBy="new Func<SubjectAssignmentSubmitDto, object>(x => x.State)">
                                    <MudSelect Style="min-width: 100px" CloseIcon="@Icons.Outlined.FilterAlt" OffsetY="true" Label="State" Clearable="true" DisableUnderLine="true" T="string" @bind-Value="_stateSelectorValue">
                                        @foreach (var state in Enum.GetNames(typeof(SubmitState)))
                                        {
                                            <MudSelectItem T="string" Value="@state">@state</MudSelectItem>
                                        }
                                    </MudSelect>
                                </MudTableSortLabel>
                            </div>
                        </MudTh>
                        <MudTh>
                            <div class="d-flex">
                                <MudDateRangePicker PickerVariant="PickerVariant.Dialog" @ref="_approveDatePicker" DisableToolbar="true" Adornment="Adornment.None" Class="range-picker-dialog-button">
                                    <PickerActions>
                                        <MudButton Class="mr-auto align-self-start" OnClick="@(() => _approveDatePicker.Clear())">Clear</MudButton>
                                        <MudButton Color="Color.Primary" OnClick="@(() => _approveDatePicker.Close())">Ok</MudButton>
                                    </PickerActions>
                                </MudDateRangePicker>
                                <MudTableSortLabel SortBy="new Func<SubjectAssignmentSubmitDto, object>(x => x.ApproveTimeUtc)">Approve time</MudTableSortLabel>
                                <MudIconButton Icon="@Icons.Outlined.FilterAlt" @onclick="@(() => _approveDatePicker.Open())"/>
                            </div>
                        </MudTh>
                        <MudTh>
                            <div class="d-flex">
                                <MudDateRangePicker PickerVariant="PickerVariant.Dialog" @ref="_rejectDatePicker" DisableToolbar="true" Adornment="Adornment.None" Class="range-picker-dialog-button">
                                    <PickerActions>
                                        <MudButton Class="mr-auto align-self-start" OnClick="@(() => _rejectDatePicker.Clear())">Clear</MudButton>
                                        <MudButton Color="Color.Primary" OnClick="@(() => _rejectDatePicker.Close())">Ok</MudButton>
                                    </PickerActions>
                                </MudDateRangePicker>
                                <MudTableSortLabel SortBy="new Func<SubjectAssignmentSubmitDto, object>(x => x.ApproveTimeUtc)">Reject time</MudTableSortLabel>
                                <MudIconButton Icon="@Icons.Outlined.FilterAlt" @onclick="@(() => _rejectDatePicker.Open())"/>
                            </div>
                        </MudTh>    
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd Class=" clickable">
                            @context.SubjectAssignmentTitle
                        </MudTd>
                        <MudTd Class="clickable">@context.Student.GetFullName()</MudTd>
                        <MudTd Class="clickable">@context.SubmitTimeUtc</MudTd>
                        <MudTd Class="clickable">@context.State</MudTd>
                        <MudTd Class="clickable">@context.ApproveTimeUtc</MudTd>
                        <MudTd Class="clickable">@context.RejectTimeUtc</MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager RowsPerPageString="Students per page"/>
                    </PagerContent>
                </MudTable>
            </MudItem>
        }

    </MudGrid>
</MudContainer>

@code {
    [Parameter]
    public int SubjectId { get; set; }

    MudDateRangePicker _submitDatePicker = new MudDateRangePicker();
    MudDateRangePicker _approveDatePicker = new MudDateRangePicker();
    MudDateRangePicker _rejectDatePicker = new MudDateRangePicker();
    MudTable<SubjectAssignmentSubmitDto> _table;
    
    private void OnRowClicked(TableRowClickEventArgs<SubjectAssignmentSubmitDto> obj)
    {
        _navigationManager.NavigateTo($"/subject/{SubjectId}/management/assignments/submits/{obj.Item.Id}");
    }
}