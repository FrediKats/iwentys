@page "/quest/active"

@using Iwentys.Sdk

@inherits Iwentys.WebClient.Content.Shared.DependencyInjectionPage

<div class="container-fluid d-flex flex-row">
    <div class="col-md-3 d-flex flex-column">
        <MudButton OnClick=@(async () => await SelectActive())>Active</MudButton>
        <MudButton OnClick=@(async () => await SelectCreated())>Created</MudButton>
        <MudButton OnClick=@(async () => await SelectArchived())>Archive</MudButton>
        <MudButton Disabled="true" Link=@LinkToRating()>Rating</MudButton>
        <MudButton Link="/quest/create">Добавить квест</MudButton>
    </div>

    <div class="col-md-6 d-flex flex-column">
        <h3>Quest Journal Page</h3>
        @if (_selectedQuest is not null)
        {
            <div class="container-fluid d-flex flex-column">
                @foreach (QuestInfoDto quest in _selectedQuest)
                {
                    <div class="card-list-element">
                        <MudCard Class="dark-elevation-01">
                            <MudCardContent>
                                <div class="card-list-element-content">
                                    <MudText Typo="Typo.h6">
                                        @quest.Title (@quest.Price)
                                    </MudText>
                                    <MudText Typo="Typo.body1">
                                        @quest.Description
                                    </MudText>
                                    <MudText Typo="Typo.body2">
                                        @quest.CreationTime
                                    </MudText>
                                </div>
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton Link=@LinkToQuestProfilePage(quest)>Profile</MudButton>
                                @if (IsCanResponseToQuest(quest))
                                {
                                    <MudButton Link=@LinkToQuestResponsePage(quest)>Response</MudButton>
                                }
                                @if (IsQuestCanBeRevoked(quest))
                                {
                                    <MudButton OnClick=@(async () => await RevokeQuest(quest))>Revoke</MudButton>
                                }

                            </MudCardActions>
                        </MudCard>
                    </div>
                }
            </div>
            @*<QuestListComponent Quests=@_selectedQuest></QuestListComponent>*@
        }
    </div>
</div>

@code {

}
